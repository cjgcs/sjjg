import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner cj=new Scanner(System.in);
        SqList x=new SqList(1000);
        int n=cj.nextInt();
        for(int i=0;i<n;i++){
            x.insert(i,cj.next());
        }
        x.insert(cj.nextInt(),cj.next());
        x.display();
        x.remove(cj.nextInt());
        x.display();

        System.out.println(x.indexOf(cj.next()));
    }
}
class SqList implements IList {
    private final Object[] listElem; // 线性表存储空间
    private int curLen; // 当前长度
    // 顺序表的构造函数，构造一个存储空间容量为maxSize的线性表
    public SqList(int maxSize) {
        curLen = 0; // 置顺序表的当前长度为0
        listElem = new Object[maxSize];// 为顺序表分配maxSize个存储单元
    }
    // 将一个已经存在的线性表置成空表
    public void clear() {
        curLen = 0; // 置顺序表的当前长度为0
    }
    // 判断当前线性表中数据元素个数是否为0,若为0则函数返回true，否则返回false
    public boolean isEmpty() {
        return curLen == 0;
    }
    // 求线性表中的数据元素个数并由函数返回其值
    public int length() {
        return curLen; // 返回顺序表的当前长度
    }
    // 读取到线性表中的第i个数据元素并由函数返回其值。其中i取值范围为：0≤i≤length()-1,如果i值不在此范围则抛出异常
    public Object get(int i) throws Exception {
        if (i < 0 || i > curLen - 1) // i小于0或者大于表长减1
            throw new Exception("第" + i + "个元素不存在"); // 输出异常
        return listElem[i]; // 返回顺序表中第i个数据元素
    }

    public void insert(int i, Object x){

        for (int j = curLen; j > i; j--) {
            listElem[j] = listElem[j - 1];// 插入位置及之后的元素后移
        }
        listElem[i] = x; // 插入x
        curLen++;// 表长度增1

    }

    
    public void remove(int i) {
        for (int j = i; j < curLen - 1; j++)
            listElem[j] = listElem[j + 1];
        curLen--; 
    }

    public int indexOf(Object x) {
        int j = 0;
        while (j < curLen && !listElem[j].equals(x)){        
            j++;
        }
        if (j < curLen)
            return j; 
        else
            return -1;
    }

    public void display() {
        for (int j = 0; j < curLen; j++)
            System.out.print(listElem[j] + " ");
        System.out.println();
    }

}
interface IList {
    public void clear(); 

    public boolean isEmpty();

    public int length();

    public Object get(int i) throws Exception;

    public void insert(int i, Object x) throws Exception;

    public void remove(int i) throws Exception;

    public int indexOf(Object x);

    public void display();

}









//精简代码
//---------------------------------------------------------------------------
//import java.util.Scanner;
//
//public class Main {
//    public static void main(String[] args) throws Exception {
//        Scanner cj=new Scanner(System.in);
//        SqList x=new SqList(1000);
//        int n=cj.nextInt();
//        for(int i=0;i<n;i++){
//            x.insert(i,cj.next());
//        }
//        x.insert(cj.nextInt(),cj.next());
//        x.display();
//        x.remove(cj.nextInt());
//        x.display();
//
//        System.out.println(x.indexOf(cj.next()));
//    }
//}
//class SqList implements IList {
//    private final Object[] listElem; // 线性表存储空间
//    private int curLen; // 当前长度
//    // 顺序表的构造函数，构造一个存储空间容量为maxSize的线性表
//    public SqList(int maxSize) {
//        curLen = 0; // 置顺序表的当前长度为0
//        listElem = new Object[maxSize];// 为顺序表分配maxSize个存储单元
//    }
//   
//    public void insert(int i, Object x){
//
//        for (int j = curLen; j > i; j--) {
//            listElem[j] = listElem[j - 1];// 插入位置及之后的元素后移
//        }
//        listElem[i] = x; // 插入x
//        curLen++;// 表长度增1
//
//    }
//
//    
//    public void remove(int i) {
//        for (int j = i; j < curLen - 1; j++)
//            listElem[j] = listElem[j + 1];
//        curLen--; 
//    }
//
//    public int indexOf(Object x) {
//        int j = 0;
//        while (j < curLen && !listElem[j].equals(x)){        
//            j++;
//        }
//        if (j < curLen)
//            return j; 
//        else
//            return -1;
//    }
//
//    public void display() {
//        for (int j = 0; j < curLen; j++)
//            System.out.print(listElem[j] + " ");
//        System.out.println();
//    }
//
//}
//interface IList {
//   
//
//    public void insert(int i, Object x) throws Exception;
//
//    public void remove(int i) throws Exception;
//
//    public int indexOf(Object x);
//
//    public void display();
//
//}




